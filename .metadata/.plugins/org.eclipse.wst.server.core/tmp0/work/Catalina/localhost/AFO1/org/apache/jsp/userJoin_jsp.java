/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-02-05 21:23:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write(" <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<title>회원가입</title>\n");
      out.write("\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css_folder/signin.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"fix/text_decoration.css\">\n");
      out.write("\n");
      out.write("<!-- CSS only -->\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body class=\"text-center\">\n");
      out.write("    \n");
      out.write("    ");

 		// 로그인된 회원들은 페이지에 접속할수 없도록
 		String userID = null;
 		if (session.getAttribute("userID") != null) { // loginAction에서 로그인 성공시 (result == 1)
 			userID = (String) session.getAttribute("userID");

 		}
 		if (userID != null) { // 이미 로그인 되어있어 접속이 처음이 아닌 경우
 			PrintWriter script = response.getWriter();
 			script.println("<script>");
 			script.println("alert('로그아웃 후 회원가입을 진행해주세요.')");
 			script.println("location.href='index.jsp'");
 			script.println("</script>");
 		}
    
    
      out.write("\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("<main class=\"form-signin w-100 m-auto\">\n");
      out.write("\n");
      out.write("<!-- 회원가입 항목 넘기기 -->\n");
      out.write("  <form action=\"joinAction.jsp\" method=\"post\" class=\"was-validated\">\n");
      out.write("    <h1 class=\"h3 mb-3 fw-normal t1\"> <a href=\"/AFO1/index.jsp\"> <b> ALL FOR ONE </b> </a> </h1>\n");
      out.write("    <h1 class=\"h3 mb-3 fw-normal\">회원가입</h1>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"form-floating\">\n");
      out.write("      <!-- <input type=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\"> -->\n");
      out.write("      <input type=\"text\" class=\"form-control \" placeholder=\"아이디\" name=\"userID\" maxlength=\"20\" required>\n");
      out.write("      <label for=\"floatingInput\">ID</label>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"form-floating\">\n");
      out.write("      <!-- <input type=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\"> -->\n");
      out.write("      <input type=\"password\" class=\"form-control \" placeholder=\"비밀번호\" name=\"userPassword\" maxlength=\"20\" required>\n");
      out.write("      <label for=\"floatingPassword\">Password</label>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <div class=\"form-floating\">\n");
      out.write("      <!-- <input type=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\"> -->\n");
      out.write("      <input type=\"password\" class=\"form-control\" placeholder=\"비밀번호\" name=\"userPassword\" maxlength=\"20\" required>\n");
      out.write("      <label for=\"floatingPassword\">Retype Password</label>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <div class=\"form-floating\">  \n");
      out.write("      <input type=\"text\" class=\"form-control\" placeholder=\"이름\" name=\"userName\" maxlength=\"20\" required>\n");
      out.write("      <label for=\"floatingInput\">Name</label>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("\n");
      out.write("    <div class=\"form-floating\">\n");
      out.write("      <input type=\"email\" class=\"form-control\" placeholder=\"이메일\" name=\"userEmail\" maxlength=\"20\" required>\n");
      out.write("      <label for=\"floatingInput\">Email</label>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("	<br>\n");
      out.write("\n");
      out.write("	<select class=\"form-select\" aria-label=\"Default select example\" name=\"userGender\" required>\n");
      out.write("	  <option value=\"\" selected>성별을 선택해 주세요(Please choose your gender)</option>\n");
      out.write("	  <option value=\"남성\">남성</option>\n");
      out.write("	  <option value=\"여성\">여성</option>\n");
      out.write("	</select>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">회원가입 완료</button>\n");
      out.write("    \n");
      out.write("  </form>\n");
      out.write("</main>\n");
      out.write("\n");
      out.write("	<!-- JavaScript Bundle with Popper -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\" crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("    \n");
      out.write("  </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
