/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-04-07 07:29:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import user.UserDAO;

public final class contents_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/fix/header.jsp", Long.valueOf(1678960617000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("user.UserDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\">\n");
      out.write("<title> contents.jsp </title>\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css_folder/ContentsCSS.css\">\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".container {\n");
      out.write("	height: 40%;\n");
      out.write("    width: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".img_item {\n");
      out.write("	width: 100vw;\n");
      out.write("   	height: 40vh;\n");
      out.write("   	background-image: linear-gradient(\n");
      out.write("   		to right,\n");
      out.write("   		rgba(20, 20, 20, 1) 10%,\n");
      out.write("   		rgba(20, 20, 20, 0.25) 25%,\n");
      out.write("        rgba(20, 20, 20, 0) 50%,\n");
      out.write("        rgba(20, 20, 20, 0.80) 75%,\n");
      out.write("        rgba(20, 20, 20, 1) 100%\n");
      out.write("   	), url(\"https://bit.ly/3kKdJhw\");\n");
      out.write("   	background-repeat: no-repeat;\n");
      out.write("   	background-position: center;\n");
      out.write("   	backgorund-size: contain;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".parent1 {\n");
      out.write("    display: flex;\n");
      out.write("    flex-direction: row;	\n");
      out.write("    flex-wrap: nowrap;\n");
      out.write("    justify-content: space-between;\n");
      out.write("}\n");
      out.write(".parent2 {\n");
      out.write("	/* flex-grow: 1; */\n");
      out.write("	display: flex;\n");
      out.write("	flex-direction: column;\n");
      out.write("	flex-wrap: wrap;\n");
      out.write("	\n");
      out.write("	\n");
      out.write("}\n");
      out.write(".box1_1{\n");
      out.write("	flex-grow: 1;\n");
      out.write("    border: 1px solid black;\n");
      out.write("    \n");
      out.write("}\n");
      out.write(".box1_2 {\n");
      out.write("	flex-grow: 1;\n");
      out.write("    border: 1px solid red;\n");
      out.write("    \n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- CSS only -->\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<!-- 공통 네비게이션 바  -->\n");
      out.write("	");
      out.write('\n');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\">\n");
      out.write("<title>header.jsp</title>\n");
      out.write("\n");
      out.write("<!-- CSS only -->\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("<!-- 부트스트랩 아이콘 cdn -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css\">\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");

	String id = null;		// 네비게이션 바에서 로그인의 유무만 파악하는 변수
	if (session.getAttribute("userID") != null) {
		id = (String) session.getAttribute("userID");
	}

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- 네비게이션 바 -->\n");
      out.write("<nav class=\"navbar navbar-expand-lg bg-light\">\n");
      out.write("  <div class=\"container-fluid\">\n");
      out.write("    <a class=\"navbar-brand\" href=\"index.jsp\"> <b> All for one </b> </a>\n");
      out.write("    \n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("    </button>\n");
      out.write("    \n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n");
      out.write("      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n");
      out.write("        \n");
      out.write("        <li class=\"nav-item\">\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"Movie.jsp\"> <b> Movie </b> </a>\n");
      out.write("        </li>\n");
      out.write("        \n");
      out.write("        <li class=\"nav-item\">\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"Drama.jsp\">\n");
      out.write("          <b> Drama </b> </a>\n");
      out.write("        </li>\n");
      out.write("        \n");
      out.write("        <li class=\"nav-item\">\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"Webtoon.jsp\">\n");
      out.write("          <b> Webtoon </b> </a>\n");
      out.write("        </li>  \n");
      out.write("      </ul>\n");
      out.write("\n");
      out.write("\n");
      out.write("      \n");
      out.write("      <!--  회원가입 버튼인데 type을 어떻게 해야할지 아직 모르겠음 -->\n");
      out.write("<!--       <button type=\"submit\" class=\"btn btn-dark\">회원가입</button> -->\n");
      out.write("      \n");
      out.write("      \n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("<!--     검색기능\n");
      out.write("	<form class=\"d-flex\" role=\"search\" action=\"\">\n");
      out.write("	  <input class=\"form-control\" type=\"text\" placeholder=\"Default input\" aria-label=\"default input example\">\n");
      out.write("	  <button type=\"submit\" class=\"btn btn-outline-success\"><i class=\"bi bi-search\"></i></button>\n");
      out.write("	</form>\n");
      out.write("	\n");
      out.write("	<div class=\"btn-group\">\n");
      out.write("		<button type=\"button\" class=\"btn btn-outline-dark dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n");
      out.write("			로그인/회원가입\n");
      out.write("		</button>\n");
      out.write("		<ul class=\"dropdown-menu\">\n");
      out.write("		    <li><a class=\"dropdown-item\" href=\"/AFO1/userLogin.jsp\">로그인</a></li>\n");
      out.write("		    <li><a class=\"dropdown-item\" href=\"/AFO1/userJoin.jsp\">회원가입</a></li>\n");
      out.write("		    <li><a class=\"dropdown-item\" href=\"/AFO1/logoutAction.jsp\">로그아웃</a></li>\n");
      out.write("		    \n");
      out.write("		</ul>\n");
      out.write("	</div> -->\n");
      out.write("    \n");
      out.write("    ");

    	if (id != null) {
   	
      out.write("\n");
      out.write("   		<button type=\"button\" class=\"btn btn-outline-success\" onclick=\"location.href='logoutAction.jsp'\">로그아웃</button>\n");
      out.write("   		<button type=\"button\" class=\"btn btn-outline-success\" onclick=\"location.href='userInfo.jsp'\">내정보</button>\n");
      out.write("    ");

    	} else {
    
      out.write("\n");
      out.write("    	<button type=\"button\" onclick=\"location.href='userLogin.jsp'\" class=\"btn btn-outline-success\">로그인</button>\n");
      out.write("    ");
 
    	} 
    
      out.write("\n");
      out.write("    \n");
      out.write("    <button type=\"button\" onclick=\"location.href='bbs.jsp'\" class=\"btn btn-outline-dark\">게시판</button>    \n");
      out.write("    \n");
      out.write("  </div>\n");
      out.write("</nav>\n");
      out.write("\n");
      out.write("<!-- JavaScript Bundle with Popper -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\" crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("	\n");
      out.write("	<div class=\"img_item\">\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	<!-- 포스터 넣는 컨테이너 -->\n");
      out.write("	<div style= \"margin-left: 15%; margin-right: 15%; padding: 5px; border: 1px solid\">\n");
      out.write("		<div class=\"parent1\"> \n");
      out.write("			<div style=\"margin: 3px\">\n");
      out.write("				<img border=3 src=\"https://bit.ly/3DmMz6J\">\n");
      out.write("			</div>\n");
      out.write("			<div class=\"parent2\" style=\"padding: 1px; border: 1px solid\">\n");
      out.write("				<div class=\"box1_1\" style=\"word-break:break-all\">\n");
      out.write("					<h2> <b> 영화의 제목 </b> </h2>\n");
      out.write("					출시연도 * 장르 * 국가\n");
      out.write("				</div>\n");
      out.write("				<div class=\"box1_1\" style=\"word-break:break-all\">\n");
      out.write("					<p> <b> 영화의 평점 </b> </p>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"box1_2\" style=\"word-break:break-all\">\n");
      out.write("					이곳엔 이용자가 평점을 남길 수 있는 부분 추가!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n");
      out.write("					~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
      out.write("				</div>\n");
      out.write("			</div>	\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	<br>\n");
      out.write("	\n");
      out.write("	<!-- 기본정보를 넣는 컨테이너 -->\n");
      out.write("	<div style= \"margin-left: 15%; margin-right: 15%; padding: 5px; border: 1px solid\" class=\"container2\">\n");
      out.write("		<div class=\"container2_1\">\n");
      out.write("			\n");
      out.write("			<div class=\"box2_1\" style=\"word-break:break-all\">\n");
      out.write("				<p> <b> 기본 정보 </b> </p>\n");
      out.write("				Avatar: The Way of Water\n");
      out.write("				2022 · 미국 · 액션\n");
      out.write("				3시간 12분 · 12세\n");
      out.write("				<br>\n");
      out.write("				아바타: 물의 길은 판도라 행성에서 '제이크 설리'와 '네이티리'가 이룬 가족이 겪게 되는 무자비한 위협과 살아남기 위해 떠나야 하는 긴 여정과 전투, 그리고 견뎌내야 할 상처에 대한 이야기를 그렸다. 월드와이...\n");
      out.write("				\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			<div class=\"box2_1\" style=\"word-break:break-all\">\n");
      out.write("				<p> <b> 출연/제작 </b> </p>\n");
      out.write("				이곳엔 부트스트랩에서 슬라이드 가져와서 출연진 목록을 넣어줄것.\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			<div class=\"box2_1\" style=\"word-break:break-all\">\n");
      out.write("				<p> <b> 비슷한 작품 </b> </p>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		<div class=\"container2_2\">\n");
      out.write("			<div class=\"box2_2\" style=\"word-break:break-all\">\n");
      out.write("				<img border=3 src=\"https://bit.ly/3DmMz6J\">\n");
      out.write("			</div>\n");
      out.write("				\n");
      out.write("			<div class=\"box2_2\" style=\"word-break:break-all\">\n");
      out.write("				<img border=3 src=\"https://bit.ly/3DmMz6J\">\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	<p> Aaaaaaa~  </p>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- JavaScript Bundle with Popper -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\" crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
